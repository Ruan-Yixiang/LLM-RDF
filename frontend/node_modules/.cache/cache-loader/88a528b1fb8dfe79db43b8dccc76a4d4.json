{"remainingRequest":"E:\\frontend\\node_modules\\babel-loader\\lib\\index.js!E:\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\frontend\\src\\pages\\screener\\screener.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\frontend\\src\\pages\\screener\\screener.vue","mtime":1721568192218},{"path":"E:\\frontend\\babel.config.js","mtime":1710922912000},{"path":"E:\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"E:\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["DevicePixelRatio","conf","axios","data","ratioHeight","window","screen","height","ratioWidth","width","fixWidth","fixHeight","url","backend_url","valueLights","screenerTitle","activeName","active","stepList","GPTTitle","iconBind","stepOperation","spaceOperation","step1","step2","step3","textSynthesis","textVariableRange","placeholderSynthesis","placeholderVariableRange","nextBtn","prevBtn","finishBtn","transferBtn","getGPTAlarm","stepData","stepsHint","spaceData","actionData","code","spaceHint","spaceClickedList","countSteps","stepHeader","stepTitle","variableCheck","options","value","label","finishTableVisible","savePart","project_rules","project_name","required","message","trigger","project_form","methods","isLightsOff","isColorWhite","chooseStep","_active","_item","console","log","goStep2","goStep3","retStep1","retStep2","isShowPrev","isShowRight","finishStep","formName","_this","$refs","validate","valid","post","para","space","name","then","res","$router","push","params","backgroundColor","createdID","$message","showClose","type","err","transfer","_this2","nlp","action","res_space","tmpSpace","_","require","cloneDeep","numberOfElements","length","Array","fill","res_code","getSynthesis","getRange","isShowNoteOfSteps","_val","deleteCurrentStep","_index","handleCheckReagent","$set","_toConsumableArray","splice","insertCurrentStep","newStep","insertBottomStep","handleChangeQuantity","_this3","checkParameter","i","reagent","range","forEach","step","index","changeClickedStatus","$forceUpdate","chooseClass","isShowNoteOfSpace","isShowCategoricalVar","addCategory","reduceCategory","_ind","initRatio","root","document","querySelector","style","setProperty","devicePixelRatio","handleRatio","getComputedStyle","getPropertyValue","t","de","_addHandler","mounted","_this4","tabs","$children","$el","display","addEventListener","event","bool","language"],"sources":["src/pages/screener/screener.vue"],"sourcesContent":["<template>\n    <div class=\"p-main\">\n        <el-row>\n            <el-col :span=\"5\">\n                <div class=\"grid-content\">\n                    <a @click=\"chooseStep(active, 'left')\" v-if=\"isShowPrev(active)\">\n                        <div class=\"prev el-icon-arrow-left\"></div>\n                    </a>\n                </div>\n            </el-col>\n            <div>\n                <el-col :span=\"14\">\n                    <div class=\"grid-content\" style=\"font-size: 35px;margin-top: 2%\">{{ screenerTitle }}</div>\n                    <el-divider></el-divider>\n                    <div :span=\"10\">\n                        <el-steps :active=\"active\" finish-status=\"success\" align-center>\n                            <el-step :title=\"stepList[0]\"></el-step>\n                            <el-step :title=\"stepList[1]\"></el-step>\n                            <el-step :title=\"stepList[2]\"></el-step>\n                        </el-steps>\n                    </div>\n                    <el-tabs v-model=\"activeName\" ref=\"tabs\">\n                        <el-tab-pane label=\"Step 1\" name=\"first\">\n                            <div class=\"tab1style\">{{ GPTTitle[0] }}</div>\n                            <el-input type=\"textarea\" :rows=\"8\" v-model=\"textSynthesis\" resize=\"none\"\n                                :placeholder=\"placeholderSynthesis\">\n                            </el-input>\n                            <div class=\"tab1style\">{{ GPTTitle[1] }}</div>\n                            <el-input type=\"textarea\" :rows=\"8\" v-model=\"textVariableRange\" resize=\"none\"\n                                style=\"margin-bottom: 32px;\" :placeholder=\"placeholderVariableRange\">\n                            </el-input>\n                            <div>\n                                <a @click=\"transfer\">\n                                    <div class=\"gpt\" style=\"font-size: medium ; \" align=\"center\">\n                                        <i class=\"iconfont icon-send-fill\"></i>\n                                    </div>\n                                </a>\n                            </div>\n                        </el-tab-pane>\n\n                        <el-tab-pane label=\"Step 2\" name=\"second\">\n                            <div style=\" height: 500px;\">\n                                <div v-if=\"isShowNoteOfSteps(stepData)\">\n                                    <h1 style=\"font-size: 20px;width:90%;margin-left: 5%;\">\n                                        &#12288{{ stepsHint }}\n                                    </h1>\n                                </div>\n                                <el-scrollbar style=\" height: 435px;\" wrap-style=\"overflow-x:hidden;\" align=\"center\">\n                                    <div v-for=\"(item, index) in stepData\" :key=\"index\" style=\"margin-top: 0px\">\n                                        <el-row>\n                                            <el-row>\n                                                <h1 style=\"margin-left: 0%; float: left; font-size: 20px\">\n                                                    {{ stepTitle }} {{ index + 1 }}\n                                                </h1>\n                                                <el-link icon=\"el-icon-circle-plus-outline\"\n                                                    style=\"font-size:18px;margin-right: 4%; float: right\"\n                                                    @click=\"insertCurrentStep(index)\"\n                                                    v-bind:title=\"iconBind[1]\"></el-link>\n                                                <el-link icon=\"el-icon-delete\"\n                                                    style=\"font-size:18px; margin-right: 4%; float: right\"\n                                                    @click=\"deleteCurrentStep(index)\"\n                                                    v-bind:title=\"iconBind[0]\"></el-link>\n                                            </el-row>\n                                            <el-row>\n                                                <el-col :span=\"8\">\n                                                    <el-row>\n                                                        <div>{{ stepHeader[0] }}</div>\n                                                        <div class=\"grid-content\">\n                                                            <el-input v-model.trim=\"item['reagent']\"\n                                                                class=\"input-common\" placeholder=\"choose\"\n                                                                style=\"width: 65%\">\n                                                            </el-input>\n                                                        </div>\n                                                        <div style=\"margin-left: -32%\">\n                                                            <el-checkbox v-model.trim=\"item['checkParameter']\"\n                                                                @change=\"handleCheckReagent(index, item)\">{{\n                                                                    variableCheck\n                                                                }}</el-checkbox>\n                                                        </div>\n                                                    </el-row>\n                                                </el-col>\n                                                <el-col :span=\"8\">\n                                                    <div>{{ stepHeader[1] }}</div>\n                                                    <div class=\"grid-content\">\n                                                        <el-input-number style=\"width: 65%\"\n                                                            v-model.trim=\"item['parameter']\" class=\"input-common\"\n                                                            @change=\"handleChangeQuantity(index)\" :precision=\"2\"\n                                                            :step=\"0.1\" :min=\"0\" :max=\"5000\"\n                                                            label=\"description\"></el-input-number>\n                                                    </div>\n                                                </el-col>\n                                                <el-col :span=\"8\">\n                                                    <div>{{ stepHeader[2] }}</div>\n                                                    <div class=\"grid-content\">\n                                                        <el-select v-model.trim=\"item['unit']\" placeholder=\"choose\"\n                                                            class=\"input-common\" style=\"width: 65%\">\n                                                            <el-option v-for=\"itemunit in options\" :key=\"itemunit.value\"\n                                                                :label=\"itemunit.label\" :value=\"itemunit.label\">\n                                                            </el-option>\n                                                        </el-select>\n                                                    </div>\n                                                </el-col>\n                                            </el-row>\n                                        </el-row>\n                                        <el-divider></el-divider>\n                                    </div>\n                                    <el-link icon=\"el-icon-circle-plus-outline\"\n                                        style=\"font-size:18px;margin-right: 4%; float: right\"\n                                        @click=\"insertBottomStep()\" v-bind:title=\"iconBind[2]\"></el-link>\n                                </el-scrollbar>\n                            </div>\n                        </el-tab-pane>\n\n                        <el-tab-pane label=\"Step 3\" name=\"third\">\n                            <el-scrollbar class=\"infinite-list\" wrap-style=\"overflow-x:hidden;\"\n                                style=\"height: 500px; margin-top: 0px\">\n                                <div v-if=\"isShowNoteOfSpace(spaceData)\">\n                                    <h1 style=\"font-size: 20px\">\n                                        {{ spaceHint }}\n                                    </h1>\n                                </div>\n                                <div style=\"overflow: auto\">\n                                    <div v-for=\"(item, index) in spaceData\" :key=\"index\" style=\"margin-top: 10px\"\n                                        align=\"center\">\n                                        <div v-if=\"isShowCategoricalVar(item)\" style=\"width: 88.5%\">\n                                            <el-collapse show-border=\"false\" @change=\"changeClickedStatus(index)\"\n                                                :class=\"chooseClass(index)\">\n                                                <el-collapse-item name=\"1\" align=\"left\">\n                                                    <template slot=\"title\">\n                                                        <div style=\"margin-left: 2%\">\n                                                            {{ item[\"name\"] }}{{ \" (\"\n                                                            }}{{ item[\"range\"].length }}{{ \")\" }}\n                                                        </div>\n                                                    </template>\n                                                    <div v-for=\"(it, ind) in item['range']\" :key=\"ind\">\n                                                        <div style=\"margin-top: 1%\">\n                                                            <el-input style=\"margin-left: 2%; width: 20%\"\n                                                                v-model.trim=\"item['range'][ind]\">\n                                                            </el-input>\n                                                            <el-link icon=\"el-icon-delete\"\n                                                                v-bind:title=\"iconBind[0]\"\n                                                                style=\"margin-right: 4%; float: right; font-size: 18px\"\n                                                                @click=\"reduceCategory(index, ind)\"></el-link>\n                                                        </div>\n                                                    </div>\n                                                </el-collapse-item>\n                                            </el-collapse>\n                                            <el-row>\n                                                <el-link icon=\"el-icon-circle-plus-outline\"\n                                                    style=\"font-size:18px;margin-right: 3.8%; margin-top: 1%;margin-bottom: 4%; float: right\"\n                                                    @click=\"addCategory(index)\"\n                                                    v-bind:title=\"iconBind[2]\"></el-link>\n                                            </el-row>\n                                        </div>\n                                    </div>\n                                </div>\n                            </el-scrollbar>\n\n                            <el-dialog :title=\"savePart[0]\" style=\"border-radius: 10px\"\n                                :visible.sync=\"finishTableVisible\">\n                                <div>\n                                    <el-form label-width=\"120px\" :model=\"project_form\" :rules=\"project_rules\"\n                                        ref=\"ruleProjectForm\" @submit.native.prevent>\n                                        <el-form-item :label=\"savePart[1]\" prop=\"project_name\">\n                                            <el-input class=\"input-common\" v-model=\"project_form.project_name\"\n                                                @keyup.enter.native=\"finishStep('ruleProjectForm')\"></el-input>\n                                        </el-form-item>\n                                    </el-form>\n                                </div>\n                                <span slot=\"footer\" class=\"dialog-footer\">\n                                    <div style=\"margin-left: 88%; \">\n                                        <a @click=\"finishStep('ruleProjectForm')\">\n                                            <div class=\"submit\">\n                                                {{ savePart[4] }}\n                                            </div>\n                                        </a>\n                                    </div>\n                                </span>\n                            </el-dialog>\n\n                            <div>\n                                <a @click=\"finishTableVisible = true\">\n                                    <div class=\"gpt\" style=\"font-size: medium ; font-weight: 700;\">{{ finishBtn }}\n                                    </div>\n                                </a>\n                            </div>\n                        </el-tab-pane>\n\n                    </el-tabs>\n\n                </el-col>\n            </div>\n            <el-col :span=\"5\">\n                <div class=\"grid-content\">\n                    <a @click=\"chooseStep(active, 'right')\" v-if=\"isShowRight(active)\">\n                        <div class=\"next el-icon-arrow-right\"></div>\n                    </a>\n                </div>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport DevicePixelRatio from '../../utils/devicePixelRatio'\nimport conf from \"../../../vue.config\"\nimport axios from \"axios\";\n\nexport default {\n    data() {\n        return {\n            ratioHeight: window.screen.height,\n            ratioWidth: window.screen.width,\n            fixWidth: window.screen.width,\n            fixHeight: window.screen.height,\n            url: conf.backend_url,\n            valueLights: true,\n            screenerTitle: \"Screener\",\n            activeName: 'first',\n            active: -1,\n            stepList: ['GPT', 'Steps', 'Space'],\n            GPTTitle: [\"Synthesis\", \"Screen variables & range\"],\n            iconBind: [\"remove\", \"insert\", \"add\"],\n            stepOperation: [\"remove\", \"insert\",],\n            spaceOperation: [\"remove\", \"add\"],\n            step1: 'GPT',\n            step2: 'Steps',\n            step3: 'Space',\n            textSynthesis: 'To a solution of alcohol (0.25 mmol) in DMSO (0.25 mL) in a reactor was added sequentially a solution of (1) Cu catalyst (0.25 mL,0.05M), (2) bpy(0.25 mL,0.05M), (3) TEMPO (0.25 mL, 0.05M), and (4) Base (0.25 mL,0.10M).',//'',\n            textVariableRange: 'I want to screen four variables: 1. alcohol: alcohol_1, alcohol_2, alcohol_3, alcohol_4, alcohol_5, alcohol_6, 2. Cu catalyst: CuBr2, CuCl2, Cu(OTf)2, Cu(BF4)2 3. Base type: NMI, DBU.',//'',\n            placeholderSynthesis: \"Please input the synthesis of the screener...\",\n            placeholderVariableRange: \"Please input the variables and range of the screener...\",\n            nextBtn: 'Next',\n            prevBtn: 'Prev',\n            finishBtn: 'Check All',\n            transferBtn: 'Trans',\n            getGPTAlarm: ['Get Data from GPT!', 'SUCCESS', 'Cancel', 'OK'],\n            stepData: [],\n            stepsHint: 'There is no screen steps. Please turn back to previous step and type some steps tobe inserted. Or you can insert some steps press the insert button.',\n            spaceData: [],\n            actionData: [],\n            code: '',\n            spaceHint: 'There is no screen variable selected. Please turn back to previous step and choose some screen variables.',\n            spaceClickedList: [],\n            countSteps: 100,\n            stepHeader: ['Reagent', 'Parameter', 'Unit'],\n            stepTitle: 'Step',\n            variableCheck: 'screen variable',\n            options: [\n                {\n                    value: \"choice1\",\n                    label: \"ml\",\n                },\n                {\n                    value: \"choice2\",\n                    label: \"mg\",\n                },\n                {\n                    value: \"choice3\",\n                    label: \"min\",\n                },\n                {\n                    value: \"choice4\",\n                    label: \"rpm\",\n                },\n                {\n                    value: \"choice5\",\n                    label: \"℃\",\n                },\n            ],\n            finishTableVisible: false,\n            savePart: ['Save Project', 'Project Name', 'Please input project name', 'Cancel', 'Submit'],\n            project_rules: {\n                project_name: [\n                    { required: true, message: 'Please input project name', trigger: 'blur' },\n                ],\n            },\n            project_form: {\n                project_name: '',\n            },\n        }\n    },\n    methods: {\n        isLightsOff() {\n            if (this.valueLights == false) {\n                return \"#313131\";\n            } else {\n                return \"#f4f5f6\";\n            }\n        },\n        isColorWhite() {\n            if (this.valueLights == false) {\n                return \"#ffffff\";\n            } else {\n                return \"#000000\";\n            }\n        },\n        chooseStep(_active, _item) {\n            console.log(_active)\n            if (_item == 'right') {\n                switch (_active) {\n                    case 0:\n                        this.goStep2()\n                        break\n                    case 1:\n                        this.goStep3()\n                        break\n                }\n            }\n            if (_item == 'left') {\n                switch (_active) {\n                    case 1:\n                        this.retStep1()\n                        break\n                    case 2:\n                        this.retStep2()\n                        break\n                }\n            }\n        },\n        isShowPrev(_active) {\n            if (_active > 0 && _active < 3) {\n                return true\n            } else {\n                return false\n            }\n        },\n\n        isShowRight(_active) {\n            if (_active > -1 && _active < 2) {\n                return true\n            } else {\n                return false\n            }\n        },\n\n        goStep2() {\n            this.active = 1\n            this.activeName = 'second'\n        },\n        retStep1() {\n            this.active = 0\n            this.activeName = 'first'\n        },\n        goStep3() {\n            this.active = 2\n            this.activeName = 'third'\n            console.log(\"-----\", this.stepData)\n\n            console.log(\"******\", this.spaceData)\n\n        },\n        retStep2() {\n            this.active = 1\n            this.activeName = 'second'\n        },\n        finishStep(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid) {\n                    console.log(\"---- stepsData\", this.stepData, \"spaceData\", this.spaceData)\n                    axios\n                        .post(this.url + \"/input-screen/create-project\", {\n                            para: {\n                                code: this.code,\n                                space: this.spaceData,\n                                name: this.project_form.project_name\n                            }\n                        }).then((res) => {\n                            // get created ID\n                            this.$router.push({ name: 'display-screener', params: { backgroundColor: this.valueLights, createdID: res.data } })\n                            this.$message({\n                                showClose: true,\n                                message: 'Create Success!',\n                                type: 'success'\n                            });\n                        }, (err) => {\n                            this.$message({\n                                showClose: true,\n                                message: 'Error, Pls Check Previous Info',\n                                type: 'error'\n                            });\n                        })\n                }\n            })\n        },\n        transfer() {\n            // this.stepData = require(\"../../jsonFomatter/screen_step.json\")\n            // let tmpSpace = require(\"../../jsonFomatter/screen_space.json\")\n            // const _ = require(\"lodash\");\n            // this.spaceData = _.cloneDeep(tmpSpace);\n\n            // let numberOfElements = 5;\n            // this.spaceClickedList = (this.spaceClickedList.length != 0) ? this.spaceClickedList : Array(numberOfElements).fill(false)\n            axios\n                .post(this.url + \"/input-screen/nlp2action\", {\n                    nlp: this.textSynthesis\n                })\n                .then((res) => {\n                    this.actionData = res['data']['action'];\n\n                    axios\n                        .post(this.url + \"/input-screen/nlp2space\", {\n                            nlp: this.textVariableRange,\n                            action: this.actionData\n                        })\n                        .then((res_space) => {\n                            this.stepData = res_space['data']['action'];\n                            let tmpSpace = res_space['data']['space'];\n                            const _ = require(\"lodash\");\n                            this.spaceData = _.cloneDeep(tmpSpace);\n                            let numberOfElements = this.stepData.length;\n                            this.spaceClickedList = (this.spaceClickedList.length != 0) ? this.spaceClickedList : Array(numberOfElements).fill(false)\n                            axios\n                                .post(this.url + \"/input-screen/nlp2code\", {\n                                    nlp: this.textSynthesis + \" \" + this.textVariableRange,\n                                })\n                                .then((res_code) => {\n                                    this.code = res_code['data'];\n                                    this.$message({\n                                        message: this.getGPTAlarm[0],\n                                        type: 'success'\n                                    });\n                                });\n                        });\n                });\n            this.active = 0\n        },\n\n        getSynthesis() {\n            console.log(\"get synthesis from backend\")\n        },\n\n        getRange() {\n            console.log(\"get range from backend\")\n        },\n\n        isShowNoteOfSteps(_val) {\n            if (_val.length == 0) {\n                return true;\n            }\n        },\n\n        deleteCurrentStep(_index) {\n            this.stepData[_index][\"checkParameter\"] = false\n            this.handleCheckReagent(_index, this.stepData[_index])\n\n            this.$set(this, 'stepData', [...this.stepData]);\n            this.stepData.splice(_index, 1);\n        },\n\n        insertCurrentStep(_index) {\n            let newStep = {\n                \"reagent\": \"\",\n                \"parameter\": 0,\n                \"unit\": \"ml\",\n                \"checkParameter\": false,\n            }\n            this.$set(this, 'stepData', [...this.stepData]);\n            this.stepData.splice(_index, 0, newStep)\n            // this.$set(this, 'stepData', [...this.stepData]);\n        },\n\n        insertBottomStep() {\n            this.$set(this, 'stepData', [...this.stepData]);\n            this.stepData.splice(this.stepData.length, 0, {\n                \"reagent\": \"\",\n                \"parameter\": 0,\n                \"unit\": \"ml\",\n                \"checkParameter\": false,\n            })\n        },\n        handleChangeQuantity() { },\n\n        handleCheckReagent(_index, _item) {\n            console.log(\"------stepdata: \", this.stepData)\n            console.log(\"------spacedata: \", this.spaceData)\n            if (_item.checkParameter == false) {\n                for (let i = 0; i < this.spaceData.length; i++) {\n                    if (_item.reagent == this.spaceData[i].name) {\n                        this.spaceData.splice(i, 1);\n                    }\n                }\n            }\n            if (_item.checkParameter == true) {\n                if (this.spaceData.length == 0) {\n                    this.spaceData.push({\n                        name: this.stepData[0].reagent,\n                        type: \"categorical\",\n                        range: []\n                    })\n                }\n                this.stepData.forEach(step => {\n                    if (step.checkParameter == true) {\n                        for (let index = 0; index < this.spaceData.length; index++) {\n                            if (step.reagent == this.spaceData[index].name) {\n                                break\n                            }\n                            if (index == this.spaceData.length - 1) {\n                                this.spaceData.push({\n                                    name: step.reagent,\n                                    type: \"categorical\",\n                                    range: []\n                                })\n                            }\n                        }\n                    }\n                });\n                // this.spaceData.push(\n                //     {\n                //         \"name\": \"\",\n                //         \"type\": \"categorical\",\n                //         \"range\": [\n                //         ]\n                //     }\n                // )\n            }\n        },\n\n        changeClickedStatus(_index) {\n            this.spaceClickedList[_index] = !this.spaceClickedList[_index]\n            this.$forceUpdate();\n        },\n\n        chooseClass(_index) {\n            return this.spaceClickedList[_index] ? \"rounded-collapse\" : \"rounded-collapse-shut\"\n        },\n\n        isShowNoteOfSpace() {\n            return (this.spaceData.length == 0)\n        },\n        isShowCategoricalVar(_item) {\n            // return (_item.range.length !=0)\n            return true\n        },\n\n        addCategory(_index) {\n            this.spaceData[_index].range.splice(this.spaceData[_index].range.length, 0, '')\n        },\n        reduceCategory(_index, _ind) {\n            this.spaceData[_index].range.splice(_ind, 1)\n        },\n        initRatio() {\n            let root = document.querySelector(\":root\");\n            root.style.setProperty(\"--ratio-width\", window.screen.width);\n            root.style.setProperty(\"--ratio-height\", window.screen.height);\n            root.style.setProperty(\"--fixed-width\", window.screen.width);\n            root.style.setProperty(\"--fixed-height\", window.screen.height);\n            if (window.devicePixelRatio < 1) {\n\n                this.ratioHeight = this.ratioHeight / window.devicePixelRatio\n                this.ratioWidth = this.ratioWidth / window.devicePixelRatio\n\n            }\n            this.ratioHeight = window.screen.height;\n            this.ratioWidth = window.screen.width;\n            this.fixWidth = window.screen.width;\n            this.fixHeight = window.screen.height;\n        },\n\n        handleRatio() {\n            let root = document.querySelector(\":root\");\n            console.log(getComputedStyle(root).getPropertyValue(\"--ratio-width\"))\n            let t = this\n            let de = new DevicePixelRatio()\n            de._addHandler(window, 'resize', function () {\n                if (window.devicePixelRatio < 1) {\n                    this.ratioHeight = this.ratioHeight / window.devicePixelRatio\n                    this.ratioWidth = this.ratioWidth / window.devicePixelRatio\n                }\n            })\n        }\n    },\n    mounted() {\n        this.$refs.tabs.$children[0].$el.style.display = \"none\";\n        this.initRatio()\n        this.handleRatio()\n        let root = document.querySelector(\":root\");\n        root.style.setProperty(\"--main-height\", window.screen.height + 'px')\n\n        window.addEventListener(\n            \"message\",\n            (event) => {\n                if (event.data.type == \"background-color\") {\n                    this.valueLights = event.data.message.bool\n\n                    let root = document.querySelector(\":root\");\n                    if (this.valueLights == false) {\n                        root.style.setProperty(\"--main-color\", \"#313131\")\n                        root.style.setProperty(\"--main-font-color\", \"#ffffff\")\n                    }\n                    else {\n                        root.style.setProperty(\"--main-color\", \"#f4f5f6\")\n                        root.style.setProperty(\"--main-font-color\", \"#000000\")\n                    }\n                }\n                if (event.data.type == \"language-sig\") {\n                    if (event.data.message.language == 'En') {\n                        this.screenerTitle = \"Screening\"\n                        this.stepList = ['GPT', 'Steps', 'Space',]\n                        this.GPTTitle = [\"Synthesis\", \"Screen variables & range\"]\n                        this.getGPTAlarm = ['Get Data from GPT!', 'SUCCESS', 'Cancel', 'OK']\n                        this.stepTitle = \"Step\"\n                        this.stepHeader = ['Reagent', 'Parameter', 'Unit']\n                        this.variableCheck = \"screen variable\"\n                        this.iconBind = [\"remove\", \"insert\", \"add\"]\n                        this.savePart = ['Save Project', 'Project Name', 'Please input project name', 'Cancel', 'Submit']\n                        this.finishBtn = 'Check All'\n                        this.stepsHint = 'There is no screen steps. Please turn back to previous step and type some steps tobe inserted. Or you can insert some steps press the insert button.'\n                        this.spaceHint = 'There is no screen variable selected. Please turn back to previous step and choose some screen variables.'\n                        this.project_rules.project_name[0].message = 'Please input project name'\n                    }\n                    if (event.data.message.language == 'Cn') {\n                        this.screenerTitle = \"自动筛选\"\n                        this.stepList = ['生成式预训练模型', '步骤', '空间',]\n                        this.GPTTitle = [\"合成\", \"筛选变量以及范围\"]\n                        this.getGPTAlarm = ['成功获取到数据!', '成功', '取消', '确认']\n                        this.stepTitle = \"步骤\"\n                        this.stepHeader = ['反应物', '参数', '单位']\n                        this.variableCheck = \"筛选变量\"\n                        this.iconBind = [\"移除\", \"插入\", \"添加\"]\n                        this.savePart = ['保存项目', '项目名称', '请输入项目名称', '取消', '提交']\n                        this.finishBtn = '检查所有'\n                        this.stepsHint = '当前没有筛选步骤。 请返回上一步骤并输入筛选步骤。 或者你也可以插入筛选步骤按插入按钮。'\n                        this.spaceHint = '当前没有筛选变量。 请返回上一步骤并选择筛选变量。'\n                        this.project_rules.project_name[0].message = '请输入项目名称'\n\n                    }\n                }\n            }\n        )\n    }\n}\n</script>\n\n<style>\n@import url(../../assets/font_viut27d3a7/iconfont.css);\n\n:root {\n    --ratio-width: '0px';\n    --ratio-height: '0px';\n    --fixed-width: '0px';\n    --fixed-height: '0px';\n    --dialog-bg-clr: #ffffff;\n    --main-color: #f4f5f6;\n    --main-font-color: #000000;\n    --main-height: 0;\n}\n\n.p-main{\n    background-color: var(--main-color) ;\n    color: var(--main-font-color) ;\n    position: 'relative';\n    height: var(--main-height);\n}\n\n.grid-content {\n    border-radius: 4px;\n    min-height: 50px;\n    position: relative;\n}\n\n.prev {\n    margin-left: 73%;\n    margin-top: 100%;\n    width: 65px;\n    height: 180px;\n    font-size: 38px;\n    color: #657c99;\n    border-radius: 35px;\n    position: absolute;\n    display: flex;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n}\n\n.prev:hover {\n    background: #ffffff;\n    box-shadow: 0px 2px 5px #e3e7f1,\n        -2px -2px 5px #e3e7f1;\n    transition: 0.3s;\n}\n\n.prev:not(:hover) {\n    transition: 0.3s;\n}\n\n.prev:active {\n    transform: scale(0.96);\n}\n\n.next {\n    margin-left: 12%;\n    margin-top: 100%;\n    width: 65px;\n    height: 180px;\n    font-size: 38px;\n    color: #657c99;\n    border-radius: 35px;\n    position: absolute;\n    display: flex;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n}\n\n.next:hover {\n    background: #ffffff;\n    box-shadow: 2px 2px 5px #e3e7f1,\n        0px -2px 5px #e3e7f1;\n    transition: 0.3s;\n}\n\n.next:not(:hover) {\n    transition: 0.3s;\n}\n\n.next:active {\n    transform: scale(0.96);\n}\n\n\n.gpt {\n    width: 120px;\n    height: 50px;\n    font-size: 30px;\n    color: #525252;\n    border-radius: 25px;\n    background: #ffffff;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    margin-left: 89%;\n    box-shadow: 2px 4px 5px #e3e7f1,\n        -2px -2px 3px #e3e7f1;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.gpt:active {\n    transform: scale(0.96);\n}\n\n.input-common .el-input__inner {\n    border-radius: 10px;\n}\n\n.input-common .el-select__input {\n    border-radius: 10px;\n}\n\n.input-common .el-input-number__decrease,\n.input-common .el-input-number__increase,\n.input-common .el-input-number__input {\n    border-radius: 10px;\n}\n\n.rel {\n    background-color: #f4f5f6;\n    color: #000000;\n    position: 'relative';\n    width: var(--ratio-width);\n    height: var(--ratio-height);\n}\n\n.abs {\n    background-color: #f4f5f6;\n    color: #000000;\n    position: 'absolute';\n    width: var(--fixed-width);\n    height: var(--fixed-height);\n}\n\n.confirm-dialog {\n    transform: translate(0%, -100%);\n    border-radius: 10px;\n}\n\n.confirm-dialog .el-button {\n    border-radius: 10px;\n    width: 70px\n}\n\n.grid-content {\n    border-radius: 4px;\n    min-height: 36px;\n}\n\n.el-textarea__inner {\n    border-radius: 10px;\n}\n\n.rounded-collapse .el-collapse-item__header {\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n}\n\n.rounded-collapse-shut .el-collapse-item__header {\n    border-radius: 10px;\n}\n\n.rounded-collapse .el-collapse-item__wrap {\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n}\n\n.el-collapse-item__arrow {\n    margin-right: 4%;\n}\n\n.el-step__head.is-process {\n  color: #46a0fc !important;\n  border-color: #46a0fc !important;\n}\n.el-step__title.is-process {\n  color: #46a0fc !important;\n}\n\n.button0 {\n    width: 100px;\n    line-height: 10px !important;\n    display: inline-block;\n    padding: 14px 20px !important;\n    border-radius: 6px;\n    color: #fff;\n    background: #46a0fc;\n    border: 1px solid #46a0fc;\n    margin-top: 20px;\n    margin-left: 10px;\n    float: right;\n    cursor: pointer;\n}\n\n.tab1style {\n    font-size: 20px;\n    margin-bottom: 5px;\n    margin-top: 15px;\n}\n\n.el-dialog {\n    background-color: var(--dialog-bg-clr);\n    border-radius: 15px;\n    top: -1%;\n    border: solid #fff 1px\n}\n\n.submit {\n    width: 100px;\n    height: 45px;\n    margin-bottom: 20px;\n    font-size: 16px;\n    font-style: normal !important;\n    font-weight: 600;\n    color: #2b2b2b;\n    border-radius: 25px;\n    background: #ffffff;\n    box-shadow: 2px 2px 3px #e3e7f1,\n        -2px -2px 3px #e3e7f1;\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.submit:active {\n    transform: scale(0.98);\n}</style>\n"],"mappings":"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"}]}