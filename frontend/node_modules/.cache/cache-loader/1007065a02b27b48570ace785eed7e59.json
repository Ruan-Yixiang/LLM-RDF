{"remainingRequest":"D:\\develop_ryx\\foundryGPT\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\develop_ryx\\foundryGPT\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\develop_ryx\\foundryGPT\\frontend\\src\\pages\\cc\\cc.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\develop_ryx\\foundryGPT\\frontend\\src\\pages\\cc\\cc.vue","mtime":1710922912000},{"path":"D:\\develop_ryx\\foundryGPT\\frontend\\babel.config.js","mtime":1710922912000},{"path":"D:\\develop_ryx\\foundryGPT\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\develop_ryx\\foundryGPT\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\develop_ryx\\foundryGPT\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["XLSX","axios","draggable","data","ratioWidth","window","screen","width","ratioHeight","height","dialogHelpVisible","flowchartData","TabsValue","paneValue","CmdUnchained","value","label","CmdRobot1","CmdThermo","CmdThermoVal","CmdUnchainedVal","CmdRobot1Val","DestinationVal","Destination","Action","ActionVal","Plates","PlatesVal","hplcPara","unchainedPara","robot1Para","analysisPart","unchainedPart","parachangerValue","robot1Part","showType","buttonTitle","currentID","currentTable","sig","processStatus","lastSTA","methods","changeTitle","processing","_currentID","_currentTable","_sig","_processStatus","post","real_name","then","res","sta","dealPara","_instr","_cmd","_para","console","log","tmp","JSON","stringify","refresh","re","run","tm","CMD","Para","add","push","exportExcel","table","rowLength","length","Object","keys","_loop","i","rowData","forEach","key","wb","utils","book_new","ws","aoa_to_sheet","book_append_sheet","writeFile","mounted","require","ParaChanger"],"sources":["src/pages/cc/cc.vue"],"sourcesContent":["<template>\n    <div style=\"position: relative\">\n        <el-dialog custom-class=\"help-dialog\" :top=\"'80px'\" :title=\"'Help'\" :visible.sync=\"dialogHelpVisible\" v-draggable>\n            <div>\n                1. Configue each instrument with the corresponding command and parameter. <br><br>\n                2. Press the \"Add\" button to add a new command line to the progress table.<br><br>\n                3. The table will be displayed at right side. The data could be export as an excel file when \"Download\" button pressed.<br><br>\n            </div>\n        </el-dialog>\n\n        <el-col :span=\"8\">\n            <div style=\"font-size: 24px;font-weight: 600; margin-left: 3%;\">IC Progress Assistant\n                <el-button type=\"info\"  size=\"mini\" icon=\"el-icon-help\" @click=\"dialogHelpVisible = true\">Help</el-button>\n            </div>\n            \n            <div class=\"grid-content bg-purple-dark\" style=\"position: relative; border: 2px solid #929292; \">\n                <el-tabs v-model=\"TabsValue\" :tab-position=\"'left'\" style=\"height: 1000px;\">\n\n                    <el-tab-pane label=\"Unchained\">\n                        <el-row>\n                            <div class=\"grid-content \" style=\"margin-top: 20px \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        CMD :\n                                    </h3>\n                                </el-col>\n                                <el-select v-model=\"CmdUnchainedVal\" placeholder=\"Choose\">\n                                    <el-option v-for=\"item in CmdUnchained\" :key=\"item.value\" :label=\"item.label\"\n                                        :value=\"item.value\">\n                                    </el-option>\n                                </el-select>\n                            </div>\n                        </el-row>\n                        <el-row v-if=\"CmdUnchainedVal == 'INIT'\">\n\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ unchainedPart['titles'][0] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"unchainedPara[unchainedPart['titles'][0]]\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ unchainedPart['titles'][1] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"unchainedPara[unchainedPart['titles'][1]]\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ unchainedPart['titles'][2] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"unchainedPara[unchainedPart['titles'][2]]\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col>\n                                    <h3 class=\"detail-method\">\n                                        {{ unchainedPart['titles'][3] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col>\n                                    <el-switch class=\"input-common\"\n                                        v-model.trim=\"unchainedPara[unchainedPart['titles'][3]]\">\n                                    </el-switch>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ unchainedPart['titles'][4] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"unchainedPara[unchainedPart['titles'][4]]\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ unchainedPart['titles'][5] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"unchainedPara[unchainedPart['titles'][5]]\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ unchainedPart['titles'][6] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"unchainedPara[unchainedPart['titles'][6]]\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ unchainedPart['titles'][7] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"unchainedPara[unchainedPart['titles'][7]]\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col>\n                                    <h3 class=\"detail-method\">\n                                        {{ unchainedPart['titles'][8] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col>\n                                    <el-switch class=\"input-common\"\n                                        v-model.trim=\"unchainedPara[unchainedPart['titles'][8]]\">\n                                    </el-switch>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col>\n                                    <h3 class=\"detail-method\">\n                                        {{ unchainedPart['titles'][9] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col>\n                                    <el-switch class=\"input-common\"\n                                        v-model.trim=\"unchainedPara[unchainedPart['titles'][9]]\">\n                                    </el-switch>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ unchainedPart['titles'][10] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input type=\"textarea\" :rows=\"10\" class=\"input-common\" v-model=\"parachangerValue\">\n                                    </el-input>\n                                </el-col>\n                                <!-- <el-input type=\"textarea\" :readonly=\"false\" :rows=\"10\" class=\"input-common\" v-model.trim=\"JSON.stringify(unchainedPara[unchainedPart['titles'][10]], null, '\\t')\"> -->\n                            </div>\n                        </el-row>\n                        <el-divider></el-divider>\n                        <el-row style=\"float:right;margin-right: 40px;\">\n                            <el-button round icon=\"el-icon-refresh\" @click=\"refresh(paneValue[TabsValue])\"></el-button>\n                            <!-- <el-button round icon=\"el-icon-s-promotion\"\n                                @click=\"run(paneValue[TabsValue], CmdUnchainedVal, unchainedPara)\"></el-button> -->\n                            <el-button round icon=\"el-icon-plus\" v-bind:title=\"'Add'\"\n                                @click=\"add(paneValue[TabsValue], CmdUnchainedVal, unchainedPara)\"></el-button>\n                        </el-row>\n                    </el-tab-pane>\n\n                    <el-tab-pane label=\"Robot1\">\n                        <el-row>\n                            <div class=\"grid-content \" style=\"margin-top: 20px \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        CMD :\n                                    </h3>\n                                </el-col>\n                                <el-select v-model=\"CmdRobot1Val\" placeholder=\"Choose\">\n                                    <el-option v-for=\"item in CmdRobot1\" :key=\"item.value\" :label=\"item.label\"\n                                        :value=\"item.value\">\n                                    </el-option>\n                                </el-select>\n                            </div>\n                        </el-row>\n                        <el-row>\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ robot1Part['titles'][0] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-select v-model=\"DestinationVal\" placeholder=\"Choose\">\n                                        <el-option v-for=\"item in Destination\" :key=\"item.value\" :label=\"item.label\"\n                                            :value=\"item.value\">\n                                        </el-option>\n                                    </el-select>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ robot1Part['titles'][1] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-select v-model=\"ActionVal\" placeholder=\"Choose\">\n                                        <el-option v-for=\"item in Action\" :key=\"item.value\" :label=\"item.label\"\n                                            :value=\"item.value\">\n                                        </el-option>\n                                    </el-select>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ robot1Part['titles'][2] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-select v-model=\"PlatesVal\" placeholder=\"Choose\">\n                                        <el-option v-for=\"item in Plates\" :key=\"item.value\" :label=\"item.label\"\n                                            :value=\"item.value\">\n                                        </el-option>\n                                    </el-select>\n                                </el-col>\n                            </div>\n                        </el-row>\n                        <el-divider></el-divider>\n                        <el-row style=\"float:right;margin-right: 40px;\">\n                            <el-button round icon=\"el-icon-refresh\" @click=\"refresh(paneValue[TabsValue])\"></el-button>\n                            <!-- <el-button round icon=\"el-icon-s-promotion\"\n                                @click=\"run(paneValue[TabsValue], CmdRobot1Val, robot1Para)\"></el-button> -->\n                            <el-button round icon=\"el-icon-plus\" v-bind:title=\"'Add'\"\n                                @click=\"add(paneValue[TabsValue], CmdRobot1Val, robot1Para)\"></el-button>\n                        </el-row>\n                    </el-tab-pane>\n\n                    <el-tab-pane label=\"Thermo\">\n                        <el-row>\n                            <div class=\"grid-content \" style=\"margin-top: 20px \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        CMD :\n                                    </h3>\n                                </el-col>\n                                <el-select v-model=\"CmdThermoVal\" placeholder=\"Choose\">\n                                    <el-option v-for=\"item in CmdThermo\" :key=\"item.value\" :label=\"item.label\"\n                                        :value=\"item.value\">\n                                    </el-option>\n                                </el-select>\n                            </div>\n                        </el-row>\n                        <el-row v-if=\"CmdThermoVal == 'INIT'\">\n                            <div class=\"grid-content \">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ analysisPart['titles'][0] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"hplcPara['InstrumentMethod']\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content detail-top\">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ analysisPart['titles'][1] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"hplcPara['ProcessingMethod']\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content detail-top\">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ analysisPart['titles'][2] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"hplcPara['TemplateName']\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content detail-top\">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ analysisPart['titles'][3] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"hplcPara['SequenceName']\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content detail-top\">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ analysisPart['titles'][4] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"hplcPara['ProjectName']\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content detail-top\">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ analysisPart['titles'][5] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-input class=\"input-common\" v-model.trim=\"hplcPara['Channels'][0]\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content detail-top\">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ analysisPart['titles'][6] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"4\">\n                                    <el-input class=\"input-common\" v-model.trim=\"hplcPara['Injection'][0][0]\">\n                                    </el-input>\n                                </el-col>\n                                <el-col :span=\"1\">&#12288</el-col>\n                                <el-col :span=\"4\">\n                                    <el-input class=\"input-common\" v-model.trim=\"hplcPara['Injection'][0][1]\">\n                                    </el-input>\n                                </el-col>\n                                <el-col :span=\"1\">\n                                    <div class=\"method-unit\">\n                                        μL\n                                    </div>\n                                </el-col>\n                                <el-col :span=\"4\">\n                                    <el-input class=\"input-common\" v-model.trim=\"hplcPara['Injection'][0][2]\">\n                                    </el-input>\n                                </el-col>\n                            </div>\n                            <div class=\"grid-content detail-top\">\n                                <el-col :span=\"8\">\n                                    <h3 class=\"detail-method\">\n                                        {{ analysisPart['titles'][7] }} :\n                                    </h3>\n                                </el-col>\n                                <el-col :span=\"14\">\n                                    <el-switch class=\"input-common\" v-model.trim=\"hplcPara['New']\">\n                                    </el-switch>\n                                </el-col>\n                            </div>\n                        </el-row>\n                        <el-divider></el-divider>\n                        <el-row style=\"float:right;margin-right: 40px;\">\n                            <el-button round icon=\"el-icon-refresh\" @click=\"refresh(paneValue[TabsValue])\"></el-button>\n                            <!-- <el-button round icon=\"el-icon-s-promotion\"\n                                @click=\"run(paneValue[TabsValue], CmdThermoVal, hplcPara)\"></el-button> -->\n                            <el-button round icon=\"el-icon-plus\" v-bind:title=\"'Add'\"\n                                @click=\"add(paneValue[TabsValue], CmdThermoVal, hplcPara)\"></el-button>\n                        </el-row>\n\n                    </el-tab-pane>\n                    <el-tab-pane label=\"GC\">\n                    </el-tab-pane>\n                    <el-tab-pane label=\"Hamilton\">\n                    </el-tab-pane>\n                    <el-tab-pane label=\"Cytation1\">\n                    </el-tab-pane>\n                    <el-tab-pane label=\"Discover\">\n                    </el-tab-pane>\n                    <el-tab-pane label=\"PT\">\n                    </el-tab-pane>\n                    <el-tab-pane label=\"EC\">\n                    </el-tab-pane>\n                </el-tabs>\n            </div>\n        </el-col>\n        <el-col :span=\"16\">\n            <div style=\"font-size: 24px\">&#12288</div>\n            <div class=\"grid-content bg-purple-dark\" style=\"border: 2px solid #929292\">\n                <el-scrollbar class=\"infinite-list\" :style=\"{ overflowX: 'hidden', height: ratioHeight + 'px' }\">\n                    <el-table ref=\"flowchartTable\" :show-header=\"true\" :data=\"flowchartData\">\n                        <template slot=\"empty\">\n                            <span>No more data</span>\n                        </template>\n                        <el-table-column property=\"Instrument\" label=\"Instrument\"\n                            :width=\"ratioWidth * 0.05 + 'px'\"></el-table-column>\n                        <el-table-column property=\"Command\" label=\"Command\"\n                            :width=\"ratioWidth * 0.05 + 'px'\"></el-table-column>\n                        <el-table-column property=\"Parameter\" label=\"Parameter\" :width=\"ratioWidth * 0.18 + 'px'\">\n                            <template slot-scope=\"scope\">\n                                <el-input type=\"textarea\" :rows=\"3\" v-model=\"scope.row['Parameter']\"></el-input>\n                            </template>\n                        </el-table-column>\n                        <el-table-column property=\"RemotePath\" label=\"RemotePath\" :width=\"ratioWidth * 0.12 + 'px'\">\n                            <template slot-scope=\"scope\">\n                                <el-input type=\"textarea\" :rows=\"2\" v-model=\"scope.row['RemotePath']\"></el-input>\n                            </template>\n                        </el-table-column>\n                        <el-table-column property=\"LocalPath\" label=\"LocalPath\" :width=\"ratioWidth * 0.12 + 'px'\">\n                            <template slot-scope=\"scope\">\n                                <el-input type=\"textarea\" :rows=\"2\" v-model=\"scope.row['LocalPath']\"></el-input>\n                            </template>\n                        </el-table-column>\n                        <el-table-column property=\"Time\" label=\"Time\" :width=\"ratioWidth * 0.03 + 'px'\"></el-table-column>\n                        <el-table-column property=\"Parallel\" label=\"Parallel\"\n                            :width=\"ratioWidth * 0.04 + 'px'\"></el-table-column>\n                        <el-table-column property=\"Release\" label=\"Release\"\n                            :width=\"ratioWidth * 0.04 + 'px'\"></el-table-column>\n                        <el-table-column property=\"Status\" label=\"Status\"\n                            :width=\"ratioWidth * 0.04 + 'px'\"></el-table-column>\n                    </el-table>\n                    <el-row style=\"float:right; margin: 20px;\">\n                        <!-- <el-button round id=\"buttonTitle\" :type=showType @click=\"changeTitle()\">{{ buttonTitle }}</el-button> -->\n                        <el-button round icon=\"el-icon-folder-opened\" @click=\"importExcel()\"></el-button>\n                        <el-button round icon=\"el-icon-download\" @click=\"exportExcel()\"></el-button>\n                    </el-row>\n                </el-scrollbar>\n            </div>\n        </el-col>\n    </div>\n</template>\n\n<script>\nimport * as XLSX from 'xlsx';\nimport axios from \"axios\";\nimport draggable from '../../utils/draggable';\n\nexport default {\n    data() {\n        return {\n            ratioWidth: window.screen.width,\n            ratioHeight: window.screen.height,\n            dialogHelpVisible: false,\n            flowchartData: [],\n            TabsValue: 0,\n            paneValue: [\"Unchained\", \"Robot1\", \"Thermo\", \"GC\", \"Hamilton\", \"Cytation1\", \"Discover\", \"PT\", \"EC\"],\n\n            CmdUnchained: [{\n                value: 'START',\n                label: 'START'\n            },\n            {\n                value: 'INIT',\n                label: 'INIT'\n            }],\n            CmdRobot1: [{\n                value: 'START',\n                label: 'START'\n            },\n            ],\n            CmdThermo: [\n                {\n                    value: 'INIT',\n                    label: 'INIT'\n                },\n                {\n                    value: 'START',\n                    label: 'START'\n                }, {\n                    value: 'SAMPLELOAD',\n                    label: 'SAMPLELOAD'\n                }, {\n                    value: 'SAMPLEUNLOAD',\n                    label: 'SAMPLEUNLOAD'\n                }],\n            CmdThermoVal: 'INIT',\n            CmdUnchainedVal: 'INIT',\n            CmdRobot1Val: 'START',\n            DestinationVal: 'Thermo',\n            Destination: [\n                {\n                    value: \"Unchained\",\n                    label: \"Unchained\"\n                },\n                {\n                    value: \"Thermo\",\n                    label: \"Thermo\"\n                },\n                {\n                    value: \"GC\",\n                    label: \"GC\"\n                },\n                {\n                    value: \"Hamilton\",\n                    label: \"Hamilton\"\n                },\n                {\n                    value: \"Cytation1\",\n                    label: \"Cytation1\"\n                },\n                {\n                    value: \"Discover\",\n                    label: \"Discover\"\n                },\n                {\n                    value: \"PT\",\n                    label: \"PT\"\n                },\n                {\n                    value: \"EC\",\n                    label: \"EC\"\n                }\n            ],\n            Action: [\n                {\n                    value: \"\",\n                    label: \"\"\n                },\n                {\n                    value: \"grab\",\n                    label: \"grab\"\n                },\n                {\n                    value: \"place\",\n                    label: \"place\"\n                }\n            ],\n            ActionVal: \"\",\n            Plates: [\n                {\n                    value: \"96A\",\n                    label: \"96A\"\n                },\n                {\n                    value: \"16A\",\n                    label: \"16A\"\n                }\n            ],\n            PlatesVal: \"16A\",\n            hplcPara: {\n                \"ProcessingMethod\": \"\",\n                \"InstrumentMethod\": \"\",\n                \"Injection\": [\n                    [\n                        \"d\",\n                        \"\",\n                        \"\"\n                    ]\n                ],\n                \"SequenceName\": \"\",\n                \"Instrument\": \"\",\n                \"TemplateName\": \"\",\n                \"User\": \"\",\n                \"ProjectName\": \"\",\n                \"Channels\": [\n                    \"\"\n                ],\n                \"New\": false\n            },\n            unchainedPara: {\n                \"ProjectName\": \"\",\n                \"ChooseDesignID\": \"\",\n                \"LsrFilePath\": \"\",\n                \"UseLsrFile\": false,\n                \"LastLibraryID\": \"\",\n                \"SetPrompts\": \"\",\n                \"SetChemicalManager\": \"\",\n                \"SetTipManagement\": \"\",\n                \"UseAI\": false,\n                \"NewDesign\": false,\n                \"ParaChanger\": \"\"\n            },\n            robot1Para: \"\",\n            analysisPart: {\n                'title': 'Analysis',\n                'name': 'Method',\n                'titles': [\n                    'Instrument Method',\n                    'Processing Method',\n                    'Template Name',\n                    'Sequence Name',\n                    'Project Name',\n                    'Channels',\n                    'Injection Volume',\n                    'New',\n                ]\n            },\n            unchainedPart: {\n                'title': 'Unchained',\n                'titles': [\n                    \"ProjectName\",\n                    \"ChooseDesignID\",\n                    \"LsrFilePath\",\n                    \"UseLsrFile\",\n                    \"LastLibraryID\",\n                    \"SetPrompts\",\n                    \"SetChemicalManager\",\n                    \"SetTipManagement\",\n                    \"UseAI\",\n                    \"NewDesign\",\n                    \"ParaChanger\"\n                ]\n            },\n            parachangerValue: \"\",\n            robot1Part: {\n                'title': 'Robot1',\n                'titles': [\n                    \"Destination\",\n                    \"Action\",\n                    \"Plates\"\n                ]\n            },\n            showType: \"success\",\n            buttonTitle: \"Start\",\n            currentID: 0,\n            currentTable: \"\",\n            sig: \"\",\n            processStatus: 0,\n            lastSTA: {}\n        }\n    },\n    methods: {\n\n        changeTitle() {\n            if (this.showType == \"success\") {\n                this.showType = \"danger\";\n                this.buttonTitle = \"Stop\";\n            }\n            else {\n                this.showType = \"success\";\n                this.buttonTitle = \"Start\";\n            }\n        },\n        processing(_currentID, _currentTable, _sig, _processStatus) {\n            axios.post(\"http://192.168.1.33:5000/api/sta\", {\n                \"Instrument\": real_name\n            })\n            .then((res) => {\n                if (res.data.sta == \"Ready\") { }\n            })\n        },\n        dealPara(_instr, _cmd, _para) {\n            console.log(\"...\", _para)\n            let tmp = {\n                \"user\": \"dell\",\n                \"Instrument\": _instr,\n                \"Command\": _cmd,\n                \"CMD\": _cmd,\n                // \"CMD\": 'QUERY',\n                \"Parameter\": JSON.stringify(_para),\n                \"Para\": JSON.stringify(_para),\n                \"RemotePath\": \"\",\n                \"LocalPath\": \"\",\n                \"Time\": 800,\n                \"TimeAllowed\": 800,\n                \"Parallel\": false,\n                \"Release\": false,\n                \"Status\": \"\"\n            }\n            console.log(_instr, _cmd, _para)\n            if (_instr == \"Robot1\") {\n                if (this.ActionVal == \"\") {\n                    tmp[\"Parameter\"] = this.DestinationVal\n                }\n                else {\n                    tmp[\"Parameter\"] = this.DestinationVal + \"/\" + this.ActionVal + \"_\" + this.PlatesVal\n                }\n                tmp[\"Para\"] = tmp[\"Parameter\"]\n            }\n            // if (_instr == \"Unchained\") {\n            // _para[\"ParaChanger\"] = JSON.parse(this.parachangerValue) \n            // tmp[\"Parameter\"] = JSON.stringify(_para , null, '\\t')\n            // tmp[\"Parameter\"] = this.parachangerValue\n            // tmp[\"Para\"] = tmp[\"Parameter\"]\n            // }\n            return tmp\n        },\n\n        refresh(_instr) {\n            let re = this.dealPara(_instr, \"RESET\", \"\")\n            axios\n                .post(\"http://192.168.1.33:5000/api/cmd\", re)\n                .then((res) => {\n                })\n        },\n        run(_instr, _cmd, _para) {\n            let tm = this.dealPara(_instr, _cmd, _para)\n            tm.CMD = \"START\"\n            tm.Para = \"PT\"\n            console.log(\"----\", tm)\n            axios\n                .post(\"http://192.168.1.33:5000/api/cmd\", tm)\n                .then((res) => {\n                })\n        },\n        add(_instr, _cmd, _para) {\n\n            this.flowchartData.push(this.dealPara(_instr, _cmd, _para))\n\n        },\n        exportExcel() {\n            const table = this.flowchartData;\n            const rowLength = table.length;\n            console.log(Object.keys(table[0]))\n            const data = [];\n            data.push([\"Instrument\",\n                \"Command\",\n                \"Parameter\",\n                \"RemotePath\",\n                \"LocalPath\",\n                \"Time\",\n                \"Parallel\",\n                \"Release\",\n                \"Status\"])\n            for (let i = 0; i < rowLength; i++) {\n                const rowData = [];\n                Object.keys(table[0]).forEach(key => {\n                    rowData.push(table[i][key]);\n                });\n                data.push(rowData);\n            }\n            const wb = XLSX.utils.book_new();\n            const ws = XLSX.utils.aoa_to_sheet(data);\n            XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n            XLSX.writeFile(wb, 'table.xlsx');\n            console.log(\"//////\",this.flowchartData)\n        },\n    },\n    mounted() {\n        this.hplcPara = require(\"../../jsonFomatter/analyze.json\");\n\n        this.unchainedPara = require(\"../../jsonFomatter/synthesis.json\");\n        this.parachangerValue = JSON.stringify(this.unchainedPara.ParaChanger, null, '\\t') //this.unchainedPara.ParaChanger \n    },\n\n\n}\n</script>\n\n<style>\n.help-dialog {\n    width: 1200px !important;\n    height: 760px !important;\n}\n</style>"],"mappings":";;AA+aA,YAAAA,IAAA;AACA,OAAAC,KAAA;AACA,OAAAC,SAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,UAAA,EAAAC,MAAA,CAAAC,MAAA,CAAAC,KAAA;MACAC,WAAA,EAAAH,MAAA,CAAAC,MAAA,CAAAG,MAAA;MACAC,iBAAA;MACAC,aAAA;MACAC,SAAA;MACAC,SAAA;MAEAC,YAAA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA;MACAC,SAAA;QACAF,KAAA;QACAC,KAAA;MACA,EACA;MACAE,SAAA,GACA;QACAH,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;MACAG,YAAA;MACAC,eAAA;MACAC,YAAA;MACAC,cAAA;MACAC,WAAA,GACA;QACAR,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,EACA;MACAQ,MAAA,GACA;QACAT,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,EACA;MACAS,SAAA;MACAC,MAAA,GACA;QACAX,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,EACA;MACAW,SAAA;MACAC,QAAA;QACA;QACA;QACA,cACA,CACA,KACA,IACA,GACA,CACA;QACA;QACA;QACA;QACA;QACA;QACA,aACA,GACA;QACA;MACA;MACAC,aAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;MACAC,UAAA;MACAC,YAAA;QACA;QACA;QAC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"}]}