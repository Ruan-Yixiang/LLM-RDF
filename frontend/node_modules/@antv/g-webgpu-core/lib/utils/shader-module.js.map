{"version":3,"file":"shader-module.js","names":["getUniformLengthByType","type","arrayLength","uniformRegExp","extractUniforms","content","uniforms","replace","_","c","defaultValues","split","uniformName","trim","defaultValue","length","Number","reduce","prev","cur","push","Array","fill"],"sources":["../../src/utils/shader-module.ts"],"sourcesContent":["export function getUniformLengthByType(type: string): number {\n  let arrayLength = 0;\n  switch (type) {\n    case 'vec2':\n    case 'ivec2':\n      arrayLength = 2;\n      break;\n    case 'vec3':\n    case 'ivec3':\n      arrayLength = 3;\n      break;\n    case 'vec4':\n    case 'ivec4':\n    case 'mat2':\n      arrayLength = 4;\n      break;\n    case 'mat3':\n      arrayLength = 9;\n      break;\n    case 'mat4':\n      arrayLength = 16;\n      break;\n    default:\n  }\n  return arrayLength;\n}\n\nconst uniformRegExp = /uniform\\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\\s+([\\s\\S]*?);/g;\nexport function extractUniforms(\n  content: string,\n): {\n  content: string;\n  uniforms: {\n    [key: string]: any;\n  };\n} {\n  const uniforms = {};\n  content = content.replace(uniformRegExp, (_, type, c) => {\n    const defaultValues = c.split(':');\n    const uniformName = defaultValues[0].trim();\n    let defaultValue: any = '';\n    if (defaultValues.length > 1) {\n      defaultValue = defaultValues[1].trim();\n    }\n\n    // set default value for uniform according to its type\n    // eg. vec2 u -> [0.0, 0.0]\n    switch (type) {\n      case 'bool':\n        defaultValue = defaultValue === 'true';\n        break;\n      case 'float':\n      case 'int':\n        defaultValue = Number(defaultValue);\n        break;\n      case 'vec2':\n      case 'vec3':\n      case 'vec4':\n      case 'ivec2':\n      case 'ivec3':\n      case 'ivec4':\n      case 'mat2':\n      case 'mat3':\n      case 'mat4':\n        if (defaultValue) {\n          defaultValue = defaultValue\n            .replace('[', '')\n            .replace(']', '')\n            .split(',')\n            .reduce((prev: number[], cur: string) => {\n              prev.push(Number(cur.trim()));\n              return prev;\n            }, []);\n        } else {\n          defaultValue = new Array(getUniformLengthByType(type)).fill(0);\n        }\n        break;\n      default:\n    }\n\n    // @ts-ignore\n    uniforms[uniformName] = defaultValue;\n    return `uniform ${type} ${uniformName};\\n`;\n  });\n  return {\n    content,\n    uniforms,\n  };\n}\n"],"mappings":";;;;;;;AAAO,SAASA,sBAAsB,CAACC,IAAY,EAAU;EAC3D,IAAIC,WAAW,GAAG,CAAC;EACnB,QAAQD,IAAI;IACV,KAAK,MAAM;IACX,KAAK,OAAO;MACVC,WAAW,GAAG,CAAC;MACf;IACF,KAAK,MAAM;IACX,KAAK,OAAO;MACVA,WAAW,GAAG,CAAC;MACf;IACF,KAAK,MAAM;IACX,KAAK,OAAO;IACZ,KAAK,MAAM;MACTA,WAAW,GAAG,CAAC;MACf;IACF,KAAK,MAAM;MACTA,WAAW,GAAG,CAAC;MACf;IACF,KAAK,MAAM;MACTA,WAAW,GAAG,EAAE;MAChB;IACF;EAAQ;EAEV,OAAOA,WAAW;AACpB;AAEA,IAAMC,aAAa,GAAG,iHAAiH;AAChI,SAASC,eAAe,CAC7BC,OAAe,EAMf;EACA,IAAMC,QAAQ,GAAG,CAAC,CAAC;EACnBD,OAAO,GAAGA,OAAO,CAACE,OAAO,CAACJ,aAAa,EAAE,UAACK,CAAC,EAAEP,IAAI,EAAEQ,CAAC,EAAK;IACvD,IAAMC,aAAa,GAAGD,CAAC,CAACE,KAAK,CAAC,GAAG,CAAC;IAClC,IAAMC,WAAW,GAAGF,aAAa,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE;IAC3C,IAAIC,YAAiB,GAAG,EAAE;IAC1B,IAAIJ,aAAa,CAACK,MAAM,GAAG,CAAC,EAAE;MAC5BD,YAAY,GAAGJ,aAAa,CAAC,CAAC,CAAC,CAACG,IAAI,EAAE;IACxC;;IAEA;IACA;IACA,QAAQZ,IAAI;MACV,KAAK,MAAM;QACTa,YAAY,GAAGA,YAAY,KAAK,MAAM;QACtC;MACF,KAAK,OAAO;MACZ,KAAK,KAAK;QACRA,YAAY,GAAGE,MAAM,CAACF,YAAY,CAAC;QACnC;MACF,KAAK,MAAM;MACX,KAAK,MAAM;MACX,KAAK,MAAM;MACX,KAAK,OAAO;MACZ,KAAK,OAAO;MACZ,KAAK,OAAO;MACZ,KAAK,MAAM;MACX,KAAK,MAAM;MACX,KAAK,MAAM;QACT,IAAIA,YAAY,EAAE;UAChBA,YAAY,GAAGA,YAAY,CACxBP,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAChBA,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAChBI,KAAK,CAAC,GAAG,CAAC,CACVM,MAAM,CAAC,UAACC,IAAc,EAAEC,GAAW,EAAK;YACvCD,IAAI,CAACE,IAAI,CAACJ,MAAM,CAACG,GAAG,CAACN,IAAI,EAAE,CAAC,CAAC;YAC7B,OAAOK,IAAI;UACb,CAAC,EAAE,EAAE,CAAC;QACV,CAAC,MAAM;UACLJ,YAAY,GAAG,IAAIO,KAAK,CAACrB,sBAAsB,CAACC,IAAI,CAAC,CAAC,CAACqB,IAAI,CAAC,CAAC,CAAC;QAChE;QACA;MACF;IAAQ;;IAGV;IACAhB,QAAQ,CAACM,WAAW,CAAC,GAAGE,YAAY;IACpC,yBAAkBb,IAAI,cAAIW,WAAW;EACvC,CAAC,CAAC;EACF,OAAO;IACLP,OAAO,EAAPA,OAAO;IACPC,QAAQ,EAARA;EACF,CAAC;AACH"}