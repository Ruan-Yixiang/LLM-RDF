{"version":3,"file":"Kernel.js","names":["AST_TOKEN_TYPES","DefineValuePlaceholder","STORAGE_CLASS","Target","createCanvas","Kernel","engine","configService","model","dirty","compiledBundle","initPromise","get","canvas","engineOptions","init","antialiasing","bundle","JSON","parse","stringify","dispatch","context","maxIteration","name","data","isNumberLikeData","existedDefine","defines","find","b","value","existedBinding","uniforms","isReferer","storageClass","Uniform","updateUniform","updateBuffer","Object","keys","forEach","key","setBinding","iteration","compile","beginFrame","clear","filter","confirmInput","i","run","endFrame","readData","target","supportWebGPU","useWGSL","WGSL","GLSL450","GLSL100","shader","shaders","define","runtime","valuePlaceHolder","replace","uniform","StorageBuffer","sizePerElement","type","FloatArray","Vector4FloatArray","Float32Array","output","length","fill","createComputeModel"],"sources":["../src/Kernel.ts"],"sourcesContent":["import {\n  AST_TOKEN_TYPES,\n  DefineValuePlaceholder,\n  IComputeModel,\n  IConfigService,\n  IRendererService,\n  KernelBundle,\n  STORAGE_CLASS,\n  Target,\n} from '@antv/g-webgpu-core';\nimport { isArray, isNumber, isTypedArray } from 'lodash';\nimport { createCanvas } from './utils/canvas';\n\nexport class Kernel {\n\n  private model: IComputeModel;\n\n  private dirty: boolean = true;\n\n  private compiledBundle: KernelBundle;\n\n  private initPromise: Promise<void>;\n  constructor(\n    private readonly engine: IRendererService,\n    private readonly configService: IConfigService,\n  ) {}\n\n  public init() {\n    const { canvas, engineOptions } = this.configService.get();\n\n    this.initPromise = this.engine.init({\n      canvas: canvas || createCanvas(),\n      // swapChainFormat: WebGPUConstants.TextureFormat.BGRA8Unorm,\n      antialiasing: false,\n      ...engineOptions,\n    });\n  }\n\n  public setBundle(bundle: KernelBundle) {\n    // deep clone\n    this.compiledBundle = JSON.parse(JSON.stringify(bundle));\n  }\n\n  public setDispatch(dispatch: [number, number, number]) {\n    if (this.compiledBundle.context) {\n      this.compiledBundle.context.dispatch = dispatch;\n    }\n    return this;\n  }\n\n  public setMaxIteration(maxIteration: number) {\n    if (this.compiledBundle.context) {\n      this.compiledBundle.context.maxIteration = maxIteration;\n    }\n    return this;\n  }\n\n  public setBinding(\n    name:\n      | string\n      | Record<\n          string,\n          | number\n          | number[]\n          | Float32Array\n          | Uint8Array\n          | Uint16Array\n          | Uint32Array\n          | Int8Array\n          | Int16Array\n          | Int32Array\n        >,\n    data?:\n      | number\n      | number[]\n      | Float32Array\n      | Uint8Array\n      | Uint16Array\n      | Uint32Array\n      | Int8Array\n      | Int16Array\n      | Int32Array\n      | Kernel,\n  ) {\n    if (typeof name === 'string') {\n      const isNumberLikeData =\n        isNumber(data) || isTypedArray(data) || isArray(data);\n      if (this.compiledBundle && this.compiledBundle.context) {\n        // set define, eg. setBinding('MAX_LENGTH', 10)\n        const existedDefine = this.compiledBundle.context.defines.find(\n          (b) => b.name === name,\n        );\n        if (existedDefine) {\n          existedDefine.value = data as number;\n          return this;\n        }\n\n        // set uniform\n        const existedBinding = this.compiledBundle.context.uniforms.find(\n          (b) => b.name === name,\n        );\n        if (existedBinding) {\n          // update uniform or buffer\n          if (isNumberLikeData) {\n            // @ts-ignore\n            existedBinding.data = data;\n            existedBinding.isReferer = false;\n\n            if (existedBinding.storageClass === STORAGE_CLASS.Uniform) {\n              if (this.model) {\n                // @ts-ignore\n                this.model.updateUniform(name, data);\n              }\n            } else {\n              if (this.model) {\n                // @ts-ignore\n                this.model.updateBuffer(name, data);\n              }\n            }\n          } else {\n            // update with another kernel\n            existedBinding.isReferer = true;\n            // @ts-ignore\n            existedBinding.data = data as Kernel;\n          }\n        }\n      }\n    } else {\n      Object.keys(name).forEach((key) => {\n        this.setBinding(key, name[key]);\n      });\n    }\n    return this;\n  }\n\n  public async execute(iteration: number = 1) {\n    if (this.dirty) {\n      if (this.compiledBundle.context) {\n        if (iteration > 1) {\n          this.compiledBundle.context.maxIteration = iteration;\n        } else {\n          this.compiledBundle.context.maxIteration++;\n        }\n      }\n      await this.compile();\n      this.dirty = false;\n    }\n\n    this.engine.beginFrame();\n\n    // 首先开启当前 frame 的 compute pass\n    this.engine.clear({});\n\n    if (this.compiledBundle.context) {\n      this.compiledBundle.context.uniforms\n        .filter(({ isReferer }) => isReferer)\n        .forEach(({ data, name }) => {\n          // @ts-ignore\n          this.model.confirmInput((data as Kernel).model, name);\n        });\n    }\n    for (let i = 0; i < iteration; i++) {\n      this.model.run();\n    }\n\n    this.engine.endFrame();\n    return this;\n  }\n\n  /**\n   * read output from GPUBuffer\n   */\n  public async getOutput() {\n    return this.model.readData();\n  }\n\n  private async compile() {\n    await this.initPromise;\n\n    const context = {\n      ...this.compiledBundle.context!,\n    };\n\n    const target = this.engine.supportWebGPU\n      ? this.engine.useWGSL\n        ? Target.WGSL\n        : Target.GLSL450\n      : Target.GLSL100;\n    let shader = this.compiledBundle.shaders[target];\n\n    // this.bindings?.forEach(({ name, data }) => {\n    //   if (name === name.toUpperCase()) {\n    //     const define = context.defines.find((d) => d.name === name);\n    //     if (define) {\n    //       // @ts-ignore\n    //       define.value = data;\n    //     }\n    //   }\n    // });\n\n    // 生成运行时 define\n    context.defines\n      .filter((define) => define.runtime)\n      .forEach((define) => {\n        const valuePlaceHolder = `${DefineValuePlaceholder}${define.name}`;\n        shader = shader.replace(valuePlaceHolder, `${define.value}`);\n      });\n\n    context.shader = shader;\n\n    // 添加 uniform 绑定的数据\n    context.uniforms.forEach((uniform) => {\n      // const binding = this.bindings.find((b) => b.name === uniform.name);\n      // if (binding) {\n      //   // @ts-ignore\n      //   uniform.data = binding.referer || binding.data;\n      //   // @ts-ignore\n      //   uniform.isReferer = !!binding.referer;\n      // }\n\n      // 未指定数据，尝试根据 uniform 类型初始化\n      if (!uniform.data) {\n        if (uniform.storageClass === STORAGE_CLASS.StorageBuffer) {\n          let sizePerElement = 1;\n          if (uniform.type === AST_TOKEN_TYPES.FloatArray) {\n            sizePerElement = 1;\n          } else if (uniform.type === AST_TOKEN_TYPES.Vector4FloatArray) {\n            sizePerElement = 4;\n          }\n          uniform.data = new Float32Array(\n            context.output.length! * sizePerElement,\n          ).fill(0);\n        }\n      }\n    });\n    // } else if (uniform.type === 'image2D') {\n    //   // @ts-ignore\n    //   buffer.data = new Uint8ClampedArray(context.output.length!).fill(0);\n    // }\n\n    this.compiledBundle.context = context;\n    this.model = await this.engine.createComputeModel(\n      this.compiledBundle.context,\n    );\n  }\n}\n"],"mappings":"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"}