{"version":3,"file":"typedarray.js","names":["merge","a","b","Error","length","Object","prototype","toString","call","c","constructor","set"],"sources":["../../src/utils/typedarray.ts"],"sourcesContent":["export function merge(a: Float32Array, b: Float32Array) {\n  // Checks for truthy values on both arrays\n  if (!a && !b) {\n    throw new Error('Please specify valid arguments for parameters a and b.');\n  }\n\n  // Checks for truthy values or empty arrays on each argument\n  // to avoid the unnecessary construction of a new array and\n  // the type comparison\n  if (!b || b.length === 0) {\n    return a;\n  }\n  if (!a || a.length === 0) {\n    return b;\n  }\n\n  // Make sure that both typed arrays are of the same type\n  if (Object.prototype.toString.call(a) !== Object.prototype.toString.call(b)) {\n    throw new Error(\n      'The types of the two arguments passed for parameters a and b do not match.',\n    );\n  }\n\n  // @ts-ignore\n  const c = new a.constructor(a.length + b.length);\n  c.set(a);\n  c.set(b, a.length);\n\n  return c;\n}\n"],"mappings":";;;;;;AAAO,SAASA,KAAK,CAACC,CAAe,EAAEC,CAAe,EAAE;EACtD;EACA,IAAI,CAACD,CAAC,IAAI,CAACC,CAAC,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,wDAAwD,CAAC;EAC3E;;EAEA;EACA;EACA;EACA,IAAI,CAACD,CAAC,IAAIA,CAAC,CAACE,MAAM,KAAK,CAAC,EAAE;IACxB,OAAOH,CAAC;EACV;EACA,IAAI,CAACA,CAAC,IAAIA,CAAC,CAACG,MAAM,KAAK,CAAC,EAAE;IACxB,OAAOF,CAAC;EACV;;EAEA;EACA,IAAIG,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACP,CAAC,CAAC,KAAKI,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACN,CAAC,CAAC,EAAE;IAC3E,MAAM,IAAIC,KAAK,CACb,4EAA4E,CAC7E;EACH;;EAEA;EACA,IAAMM,CAAC,GAAG,IAAIR,CAAC,CAACS,WAAW,CAACT,CAAC,CAACG,MAAM,GAAGF,CAAC,CAACE,MAAM,CAAC;EAChDK,CAAC,CAACE,GAAG,CAACV,CAAC,CAAC;EACRQ,CAAC,CAACE,GAAG,CAACT,CAAC,EAAED,CAAC,CAACG,MAAM,CAAC;EAElB,OAAOK,CAAC;AACV"}